/***************************************/
//------------Search--------------//
/***************************************/
function initializeSearch(length) {
    var enable = length > 0;

    $.fn.dataTable.moment('MMMM D YYYY, h:mm a');

    $('.dataTable').DataTable({
        bSort: enable,
        bFilter: false,
        bInfo: false,
        bPaginate: false,
        bRetrieve: true,
        sDom: "<'row'<'col-xs-6'l><'col-xs-6'f>r>t<'row'<'col-xs-6'i><'col-xs-6'p>>",
        sPaginationType: "bootstrap",
        order: [[1, 'asc']],
        oLanguage: {
            "sEmptyTable": "",
            "sZeroRecords": ""
        },
        columnDefs: [
            {targets: 'no-sort', orderable: false},
            {type: 'datetime-moment', targets: [3, 4]}
        ]
    });

    removeEmptyRowsDataTable();
}
/***************************************/
//------------REFRESH PROFILE URL--------------//
/***************************************/


function refreshProfileUrl() {
    // Disabled Button Tooltip Mouse Events
    $('.refresh_publication').mouseover(function () {
        tooltip.open();
    });
    $('.refresh_publication').mousemove(function () {
        tooltip.get().css({
            'top': event.clientY + 12,
            'left': event.clientX - 100
        });
    });
    $('.refresh_publication').mouseout(function () {
        tooltip.remove();
    });
    $('.refresh_publication').click(function () {
        tooltip.remove();
    });

    $(function () {
        tooltip = new PNotify({
            title: 'Refresh Profile URL',
            text: 'Refresh the list of publications from your academic profile',
            type: 'info',
            styling: 'fontawesome',
            hide: false,
            width: "200px",
            buttons: {
                closer: false,
                sticker: false
            },
            history: {
                history: false
            },
            animate_speed: "fast",
            icon: "fa fa-commenting",
            // Setting stack to false causes PNotify to ignore this notice when positioning.
            stack: false,
            auto_display: false
        });
        // Remove the notice if the user mouses over it.
        tooltip.get().mouseout(function () {
            tooltip.remove();
        });
    });


    // Disabled Button Tooltip Mouse Events
    $('.refresh_publication_disabled').mouseover(function () {
        tooltip_disabled.open();
    });
    $('.refresh_publication_disabled').mousemove(function () {
        tooltip_disabled.get().css({
            'top': event.clientY + 12,
            'left': event.clientX - 100
        });
    });
    $('.refresh_publication_disabled').mouseout(function () {
        tooltip_disabled.remove();
    });

    $(function () {
        tooltip_disabled = new PNotify({
            title: 'Please Wait...',
            text: 'Your publication list is currently refreshing. Please wait until it is complete to refresh again.',
            type: 'error',
            styling: 'fontawesome',
            width: "200px",
            hide: false,
            buttons: {
                closer: false,
                sticker: false
            },
            history: {
                history: false
            },
            animate_speed: "fast",
            icon: "fa fa-commenting",
            // Setting stack to false causes PNotify to ignore this notice when positioning.
            stack: false,
            auto_display: false
        });
        // Remove the notice if the user mouses over it.
        tooltip_disabled.get().mouseout(function () {
            tooltip_disabled.remove();
        });
    });


    // Call Refresh Function
    $('.refresh_publication').click(function () {
        user_id = $(this).attr('id');
        $.ajax({
            type: 'POST',
            data: {id: user_id},
            url: '/users/' + user_id + '/refresh_profile',
            success: function () {
                showNotificationMsg('Publication URL Refresh Initiated');
                $.pjax.reload('[data-pjax-container]');
            }
        });
    });
}
/***************************************/
//------------APPROVE ORGANIZER--------//
/***************************************/
function initializeAdmin(length ) {
    var enable = length > 0;

    $.fn.dataTable.moment('MMMM D YYYY, h:mm a');

    $('.dataTable').DataTable({
        bSort: enable,
        bFilter: enable,
        bInfo: false,
        bPaginate: false,
        sDom: "<'row'<'col-xs-6'l><'col-xs-6'f>r>t<'row'<'col-xs-6'i><'col-xs-6'p>>",
        sPaginationType: "bootstrap",
        oLanguage: {
            "sEmptyTable": "",
            "sZeroRecords": ""
        },
        order: [[0, 'asc']],
        columnDefs: [
            {targets: 'no-sort', orderable: false}
        ]
    });

    removeEmptyRowsDataTable();

    $('.organizer-approval').click(function () {
        user_id = $(this).attr('id');
        approveOrganizer(user_id);
    });

}

function approveOrganizer(user_id) {
    $.ajax({
        type: 'POST',
        url: '/users/' + user_id + '/approve_organizer',
        data: {id: user_id},
        beforeSend: function () {
            showProcessingMsg();
        },
        success: function (test, status, xhr) {
            showNotificationMsg('User Approved As Organizer');
            $.pjax.reload('[data-pjax-container]');
        },
        error: function (xhr, status, text) {
            showErrorMsg(xhr.responseText);
        }
    });
}
/***************************************/
//------------DELETE VIEW--------------//
/***************************************/
function initializeUserDelete() {
    $('.edit_user').validate({
        rules: {
            'user[current_password]': {
                required: true,
                minlength: 6
            }
        },
        errorClass: "error-message-no-label",
        validClass: "error-message-no-label"
    });
}

/*************************************/
//------------EDIT VIEW--------------//
/*************************************/
function initializeUserEdit() {
    $('#user_phone_number').inputmask("phone");
    $('#new_user_registration').validate({
        rules: {
            'user[first_name]': 'required',
            'user[last_name]': 'required'
        },
        errorClass: "error-message-with-label",
        validClass: "error-message-with-label"
    });
}

/*************************************/
//------------BECOME ORGANIZER--------------//
/*************************************/
function initializeUserOrganizer() {
    $('#organizer_request_form').validate({
        rules: {},
        errorClass: "error-message-with-label",
        validClass: "error-message-with-label"
    });
}

/******************************************/
//------------PASSWORD RESET--------------//
/******************************************/
function initializeUserPasswordReset() {
    $('#email_passwd_form').validate({
        rules: {
            'user[email]': {
                required: true,
                email: true
            },
            'user[current_password]': {
                required: true
            },
            'user[password]': {
                notEqualPassword: "#user_current_password",
                required: true,
                minlength: 6
            },
            'user[password_confirmation]': {
                equalTo: "#user_password"
            }
        },
        errorClass: "error-message-with-label",
        validClass: "error-message-with-label"
    });
}

/*************************************/
//------------SHOW VIEW--------------//
/*************************************/
function initializeUserShow(gender) {
    $('#upload_image_btn').click(function () {
        $('#profile-image-upload').trigger('click');
    });

    $('.dropzone').html5imageupload({
        onAfterProcessImage: function () {
            $('.userimage').attr('src', $('#image_upload').attr('src'));
        },
        onAfterCancel: function () {
            if (gender == 1) {
                $('#user_avatar').attr('src', "<%= asset_path('Male.jpg') %>");
                $('.userimage').attr('src', "<%= asset_path('Male.jpg') %>");
                $('.preview').attr('src', "<%= asset_path('Male.jpg')%>");
            } else {
                $('#user_avatar').attr('src', "<%= asset_path('Female.jpg') %>");
                $('.userimage').attr('src', "<%= asset_path('Female.jpg')%>");
                $('.preview').attr('src', "<%= asset_path('Female.jpg')%>");
            }
        },
    });

    $(".sidebar li").removeClass('active');
}

// Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application-layout.js.
/****************************************/
//--------------PASSWORD----------------//
/****************************************/
function initializePasswordEdit() {
    $('#edit_user_password').validate({
        rules: {
            'user[password]': {
                required: true,
                minlength: 6,
                maxlength: 255
            },
            'user[password_confirmation]': {
                required: true,
                equalPassword: "#user_password"
            }
        }
    });
}

/****************************************/
//------------REGISTRATION--------------//
/****************************************/
function initSignup() {

    initSignUpValidation();
    $('#phoneNumber').inputmask("phone");

    $('#first_name').keyup(function () {
        $('#username').html($('#first_name').val() + ' ' + $.trim($('#last_name').val()));
    });

    $('#last_name').keyup(function () {
        $('#username').html($('#first_name').val() + ' ' + $.trim($('#last_name').val()));
        $('#welcomeLastName').html('Welcome ' + $.trim($('#last_name').val()) + '!');
    });

    $('input').on('focus', function () {
        $('.' + $(this).attr('id')).hide();
    });

    if ($('#user_email').valid()) {
        hideErr('#user_email');
    }

    if (!$('#phoneNumber').valid()) {
        hideErr('#phoneNumber');
    }

    if (!$('#first_name').valid() && !$('#last_name').valid()) {
        hideErr('#first_name');
        hideErr('#last_name');
    }

    function hideErr(element) {
        $(element).parent().first().removeClass("has-error");
        $(element).parent().first().children().remove('.error-message-no-label');
    }

    $('#user_gender').change(function () {
        if ($('#userimage').attr('src') === "<%= asset_path('Male.jpg') %>" || $('#userimage').attr('src') === "<%= asset_path('Female.jpg') %>") {
            if ($(this).val() == 1) {
                $('#user_avatar').attr('src', "<%= asset_path('Male.jpg') %>");
                $('#userimage').attr('src', "<%= asset_path('Male.jpg') %>");
            } else {
                $('#user_avatar').attr('src', "<%= asset_path('Female.jpg') %>");
                $('#userimage').attr('src', "<%= asset_path('Female.jpg') %>");
            }
        }
    });

    $('.form-control').focus(function () {
        $(this).parent().siblings('a.custom-tooltip').children().first().css('opacity', '1.0');
    });

    $('.form-control').blur(function () {
        $(this).parent().siblings('a.custom-tooltip').children().first().css('opacity', '0.0');
    });

    $('.dropzone').html5imageupload({
        onAfterCancel: function () {
            setDefaultImage();
        },
        onAfterRemoveImage: function () {
            setDefaultImage();
        },
        onAfterCompleteImage: function () {
            $('#userimage').attr('src', $('#image_upload').attr('src'));
        }
    });

    $('#page-content').css('opacity', 1);

    $('#termsConditionCheckbox').click(function () {
        if ($(this).prop('checked'))
            $('.buttonFinish').removeClass('buttonDisabled');
        else
            $('.buttonFinish').addClass('buttonDisabled');
    });

    function setDefaultImage() {
        if ($('#user_gender').val() == 1) {
            $('#user_avatar').attr('src', "<%= asset_path('Male.jpg') %>");
            $('#userimage').attr('src', "<%= asset_path('Male.jpg') %>");
        } else {
            $('#user_avatar').attr('src', "<%= asset_path('Female.jpg') %>");
            $('#userimage').attr('src', "<%= asset_path('Female.jpg') %>");
        }
    }

    $('#wizard').smartWizard({
        reverseButtonsOrder: true, //shows buttons ordered as: prev, next and finish
        onLeaveStep: leaveAStepCallback,
        onFinish: onFinishCallback,
        onShowStep: showAStepCallback
    });

    function leaveAStepCallback(obj, context) {
        return validateSteps(context.fromStep); // return false to stay on step and true to continue navigation
    }

    function showAStepCallback(obj, context) {
        if (context.toStep == 1 || context.toStep == 2) {
            $('.buttonFinish').hide();
        }

        if (context.toStep == 2 || context.toStep == 3) {
            $('.buttonPrevious').removeClass('buttonDisabled');
        }

        if (context.toStep == 2) {
            $('.buttonNext').removeClass('buttonDisabled');
        }

        if (context.fromStep == 3) {
            $('.buttonNext').css('display', 'inline-block');
            $('.buttonFinish').css('display', 'none');
        }

        if (context.toStep == 3) {
            $('.buttonFinish').addClass('buttonDisabled');
            $('.buttonNext').css('display', 'none');
            $('.buttonFinish').css('display', 'inline-block');
        }
    }

    function onFinishCallback(obj, context) {
        $('.x_content').fadeOut(function () {
            $('#finalstep').fadeIn();
        });

        if (validateSteps(3)) {
            setTimeout(function () {
                submitUserForm();
            }, 5000);
        }
    }

    function validateSteps(stepnumber) {
        if (stepnumber == 2) {
            if (!$('#new_user_registration').valid()) {
                return false;
            } else {
                hideErrorMsg();
            }
        }

        $('.buttonNext').addClass('buttonDisabled');
        $('.buttonPrevious').addClass('buttonDisabled');
        return true;
    }

    $('.buttonNext').addClass('btn btn-primary');
    $('.buttonPrevious').addClass('btn btn-default');
    $('.buttonFinish').addClass('btn btn-paircon');

    $('#upload_image_btn').click(function (e) {
        $('#profile-image-upload').trigger('click');
        return false;
    });

    function submitUserForm() {
        $('#new_user_registration').submit();
    }

};

/****************************************/
//------------VALIDATIONS--------------//
/****************************************/
$.extend($.validator.messages, {
    required: I18n.t("required_field_msg"),
    email: I18n.t("invalid_email_address_msg"),
    equalTo: I18n.t('pls_enter_same_value_msg'),
    minlength: I18n.t('pls_enter_at_least_characters'),
    url: I18n.t('invalid_url_msg'),
    number: I18n.t('pls_enter_valid_number'),
    max: I18n.t('pls_enter_value_less_or_equal_max'),
    accept: ""
});

$.validator.setDefaults({
    errorClass: "error-message-no-label",
    validClass: "error-message-no-label",
    highlight: function (element, errorClass, validClass) {
        $(element).closest('.form-group, .input-group').addClass("has-error");
    },
    unhighlight: function (element, errorClass, validClass) {
        $(element).closest('.form-group, .input-group').removeClass("has-error");
    }
});

$.validator.addMethod("notEqualPassword", function (value, element) {
    return $('#user_password').val() != $('#user_current_password').val();
}, "Specify a new / different password");

$.validator.addMethod("equalPassword", function (value, element) {
    return $('#user_password').val() == $('#user_password_confirmation').val();
}, "Passwords don't match. Please try again ...");

$.validator.addMethod('noSpecialCaracters', function (value, element) {
    return value.match(/^[0-9a-z\s\-\_\!\(\)\/\,\.:+]*$/i);
}, I18n.t('no_special_chars_allowed_msg'));

$.validator.addMethod("without_protocol_url", function (value, element) {
    return $.validator.methods['url'].call(
        this, "http://" + value, element
    );
}, I18n.t('url_protocol_not_required_msg'));

function initSignUpValidation() {
    $('#new_user_registration').validate({
        ignore: [],
        rules: {
            'user[first_name]': 'required',
            'user[last_name]': 'required',
            'user[username]': {
                required: true,
                remote: "/users/validation",
                minlength: 4
            },
            // 'user[dob]': 'required',
            // 'user[country]': 'required',
            'user[gender]': 'required',
            // 'user[phone_number]': 'required',
            'user[email]': {
                required: true,
                email: true,
                maxlength: 255
            },
            'user[password]': {
                required: true,
                minlength: 6,
                maxlength: 255
            },
            'user[password_confirmation]': {
                required: true,
                equalPassword: "#user_password"
            }
        },
        highlight: function (element, errorClass, validClass) {
            $(element).parent().first().addClass("has-error");
            $('.' + $(element).attr('id')).hide();
        },
        unhighlight: function (element, errorClass, validClass) {
            $(element).parent().first().removeClass("has-error");
            $('.' + $(element).attr('id')).show();
        },
        success: function (element) {
            $(element).parent().first().removeClass("has-error");
            $('.' + element.attr('for')).show();
        }
    });
}

function initLoginBoxValidation() {
    $('#new_user_session').validate({
        rules: {
            'user[email]': {
                required: true,
                email: true
            },
            'user[password]': {
                required: true,
                minlength: 6,
                maxlength: 255
            }
        }
    });

    $('#new_user_password').validate({
        rules: {
            'user[email]': {
                required: true,
                email: true
            }
        }
    });

    $('#new_user_confirmation').validate({
        rules: {
            'user[email]': {
                required: true,
                email: true
            }
        }
    });

    $('#loginbox form').submit(function (e) {
        if (!$(this).valid()) {
            $('#loginbox').effect('shake');
            return false;
        }
    });

    $('#new_user_registration').validate({
        rules: {
            'user[first_name]': 'required',
            'user[last_name]': 'required',
            'user[email]': {
                required: true,
                email: true,
                remote: "/users/validation"
            },
            'user[password]': {
                required: true,
                minlength: 6,
                maxlength: 255
            },
            'user[password_confirmation]': {
                required: true,
                equalPassword: "#user_password"
            }
        },
        messages: {
            'user[email]': {
                remote: jQuery.format("This Email Address is already in use. Please try again ...")
            }
        },
        highlight: function (element, errorClass, validClass) {
            $(element).parent().first().addClass("has-error");
        }
        ,
        unhighlight: function (element, errorClass, validClass) {
            $(element).parent().first().removeClass("has-error");
        }
    });
}

/***************************************/
//------------For Paper table--------------//
/***************************************/
function initializePapers() {
    $.fn.dataTable.moment('DD-MM-YYYY HH:mm:ss')
    $('#datatable-papers').DataTable({
        bSort: enable,
        bFilter: enable,
        bInfo: false,
        bPaginate: false,
        sDom: "<'row'<'col-xs-6'l><'col-xs-6'f>r>t<'row'<'col-xs-6'i><'col-xs-6'p>>",
        sPaginationType: "bootstrap",
        oLanguage: {
            "sEmptyTable": "",
            "sZeroRecords": ""
        },
        order: [[0, 'asc']],
        columnDefs: [
            {targets: 'no-sort', orderable: false}
        ]
    });
}
    /***************************************/
//------------View all Conferences --------//
    /***************************************/
    function initializeViewAllConference(length ) {
        var enable = length > 0;

        $.fn.dataTable.moment('MMMM D YYYY, h:mm a');

        $('.dataTable').DataTable({
            bSort: enable,
            bFilter: enable,
            bInfo: false,
            bPaginate: false,
            sDom: "<'row'<'col-xs-6'l><'col-xs-6'f>r>t<'row'<'col-xs-6'i><'col-xs-6'p>>",
            sPaginationType: "bootstrap",
            oLanguage: {
                "sEmptyTable": "",
                "sZeroRecords": ""
            },
            order: [[0, 'asc']],
            columnDefs: [
                {targets: 'no-sort', orderable: false}
            ]
        });
}